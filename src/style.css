/* styles.css */
/* 1. Use a more-intuitive box-sizing model */
*, *::before, *::after {
    box-sizing: border-box;
    }
    
    /* 2. Remove default margin */
    * {
        margin: 0;
        }
        
        body {
    /* 3. Add accessible line-height */
    line-height: 1.5;
    /* 4. Improve text rendering */
    -webkit-font-smoothing: antialiased;
    }
    
    /* 5. Improve media defaults */
    img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
    }
    
    /* 6. Inherit fonts for form controls */
    input, button, textarea, select {
    font: inherit;
    }
    
    /* 7. Avoid text overflows */
    p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
    }
    
    /* 8. Improve line wrapping */
    p {
    text-wrap: pretty;
    }
    h1, h2, h3, h4, h5, h6 {
    text-wrap: balance;
    }
    
    /*
    9. Create a root stacking context
    */
    #root, #__next {
    isolation: isolate;
    }

body {
    --primary-color: #B0C0BC;
    /*
    --secondary-color: #C1EDCC;
    */
    --secondary-color: #042A2B;
    --tertiary-color: #A7A7A9;
    --button-color: #556F44;
    --button-color-dark: #415534;
    --border-color: #797270;
    --overdue-color: #D63230;
    container-type: inline-size;
}

header, footer {
    position: fixed;
    height: 40px;
    background-color: var(--secondary-color);
    border: 2px solid var(--border-color);
    color: white;
}

header {
    top: 0;
    display: flex;
    justify-content: space-between;
    width: 100vw;
}

.mainGrid {
    margin-top: 40px;
    margin-bottom: 40px;
    display: grid;
    grid-template-columns: minmax(150px, 250px) minmax(500px, 1fr);
    grid-template-rows: minmax(calc(100vh - 80px), auto);
    background-color: var(--primary-color);
}

.columnGrid {
    border: 2px solid var(--border-color);
    border-top: 0;
    border-bottom: 0;
    padding-top: 10px;
}

.sidebarItem {
    display: flex;
    align-items: center;
    padding: 10px;
    font-size: 1.5rem;
}

.line {
    width: 100%;
    height: 10px;
    background-color: var(--secondary-color);
    margin: 5px 0;
}

#mainArea {
    display: flex;
    flex-direction: column;
}

.MainAreaHeader {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px 0;
    background-color: var(--tertiary-color);
    border: 2px solid var(--border-color);
    border-top: 0;
    border-left: 0;
    font-size: 1.5rem;
}

.contentArea {
    display: flex;
    flex-direction: column;
    padding: 10px 30px;
    gap: 10px;
    flex: 1;
    overflow: auto;
}

.mainHeader {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.firstLine {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}


.lineElement {
    display: grid;
    grid-template-columns: 1fr 60px;
    grid-template-rows: 40px;
    grid-auto-rows: fit-content(800px);
}

.lineElement:hover {
    background-color: var(--border-color);
}

.toDoContent {
    display:flex;
    flex-direction: row;
    gap: 20px;
    align-items: end;
}

.toDoContentFrame {
    grid-column: 1 / 3;
    display: grid;
    grid-template-columns: minmax(400px, 600px) minmax(300px, 1fr);
    grid-template-rows: 1fr; 
    grid-auto-rows: 1fr;
    padding-right: 70px;
    gap: 40px;
}

.descriptionDiv {
    border: 1px solid var(--border-color);
    padding: 10px 5px;
}

.noteContainer {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 40px 1fr 40px;
    border: 1px solid var(--border-color);
    padding: 10px 5px;
    flex: 1;
}

.noteArea {
    display: grid;
    grid-template-columns: repeat(auto-fill, 300px);
    grid-template-rows: 1fr;  
}

.formContainer {
    display: none;
    position:absolute;
    grid-template-columns: minmax(0, 1fr) minmax(620px, 880px);
    grid-template-rows: minmax(calc(100cqh - 80px), auto);
    width: 100cqw;
    margin-top: 40px;
    font-size: 1.5rem;
}

.formShadow {
    width: 100%;
    height: 100%;
    background-color: black;
    opacity: 0.8;
}

.formMain {
    background-color: var(--primary-color);
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 50px 1fr minmax(400px, 1.5fr) 50px;
}

.formContent {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows:50px 300px 50px;
}

.formColumns {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr;
}

.formRow, .formColumns {
    padding: 0 20px;
}

.formnoteContainer {
    display: grid;
    grid-template-columns: 80px 1fr;
    grid-template-rows: minmax(280px, max-content);
}

.formNotes {
    display: grid;
    grid-template-columns: repeat(auto-fill, 240px);
    grid-template-rows: 280px;
    grid-auto-rows: 260px;
    gap: 10px;
}

.noteHeader {
    grid-row: 1 / -1;
}

.noteBox, .addNoteBox {
    border: 1px solid var(--border-color);
}

.noteButton {
    display: flex;
    justify-content: end;
}

.addIcon {
    display: flex;
    height: 100%;
    align-items: center;
    justify-content: center;
}

#formDescription {
    display: flex;
    align-items: start;
    gap: 10px;
}

.formButtons {
    display: flex;
    justify-content: end;
}

footer {
    bottom: 0;
    display: flex;
    justify-content: center;
    width: 100vw;
}

.active {
    background-color: var(--border-color);
}

.activeFrame:hover {
    background-color: var(--primary-color);
}

.overDue {
    color: var(--overdue-color);
    font-weight: 700;
}


.datumHeader, .headerText {
    font-weight:700;
    font-size: 1.5rem;
}

.toDoTitle {
    font-size: 1.5rem;
}


.button {
  align-items: center;
  appearance: none;
  background-color: var(--button-color);
  background-image: linear-gradient(1deg, var(--button-color-dark), var(--button-color) 99%);
  background-size: calc(100% + 20px) calc(100% + 20px);
  border-radius: 100px;
  border-width: 0;
  box-shadow: none;
  box-sizing: border-box;
  cursor: pointer;
  display: inline-flex;
  font-family: CircularStd,sans-serif;
  font-size: 1rem;
  height: auto;
  justify-content: center;
  line-height: 1.5;
  padding: 6px 20px;
  text-align: center;
  text-decoration: none;
  transition: background-color .2s,background-position .2s;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  vertical-align: top;
  white-space: nowrap;
}

.button:active,
.button:focus {
  outline: none;
}

.button:hover {
  background-position: -20px -20px;
}

.button:focus:not(:active) {
  box-shadow: rgba(40, 170, 255, 0.25) 0 0 0 .125em;
}